openapi: 3.0.1
info:
  title: NxtPort Certified Pick-Up API
  termsOfService: 'https://www.nxtport.eu/General-Terms-And-Conditions'
  contact:
    email: support@nxtport.eu
  version: v1
servers:
  - url: 'https://api-uat.nxtport.eu/certified-pickup/v1'
security:
  - Authorization: []
    Subscription: []
paths:
  '/{port-locode}/containers/{equipment-number}/import/gate-out':
    put:
      tags:
        - gate-out
      parameters:
        - name: port-locode
          in: path
          required: true
          schema:
            type: string
        - name: equipment-number
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GateOut'
          text/json:
            schema:
              $ref: '#/components/schemas/GateOut'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GateOut'
        required: false
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseApiResponse'
        '401':
          description: 'Unauthorized, role or scope forbids you from taking this action'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '405':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Error accessing API
          content: {}
      x-codegen-request-body-name: body
  '/{port-locode}/containers/{equipment-number}/import/pickup-rights':
    put:
      tags:
        - pickup-rights
      parameters:
        - name: port-locode
          in: path
          required: true
          schema:
            type: string
        - name: equipment-number
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitPickupRight'
          text/json:
            schema:
              $ref: '#/components/schemas/SubmitPickupRight'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SubmitPickupRight'
        required: false
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseApiResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: 'Unauthorized, role or scope forbids you from taking this action'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Error accessing API
          content: {}
      x-codegen-request-body-name: body
  '/{port-locode}/containers/{equipment-number}/import/commercial-release':
    put:
      tags:
        - release-lights
      parameters:
        - name: port-locode
          in: path
          required: true
          schema:
            type: string
        - name: equipment-number
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommercialReleaseAction'
          text/json:
            schema:
              $ref: '#/components/schemas/CommercialReleaseAction'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CommercialReleaseAction'
        required: false
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseApiResponse'
        '401':
          description: 'Unauthorized, role or scope forbids you from taking this action'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '405':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Error accessing API
          content: {}
      x-codegen-request-body-name: body
  '/{port-locode}/containers/{equipment-number}/import/terminal-release':
    put:
      tags:
        - release-lights
      parameters:
        - name: port-locode
          in: path
          required: true
          schema:
            type: string
        - name: equipment-number
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminalRelease'
          text/json:
            schema:
              $ref: '#/components/schemas/TerminalRelease'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TerminalRelease'
        required: false
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseApiResponse'
        '401':
          description: 'Unauthorized, role or scope forbids you from taking this action'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '405':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Error accessing API
          content: {}
      x-codegen-request-body-name: body
  '/{port-locode}/containers/{equipment-number}/import/release-lights-status':
    get:
      tags:
        - release-lights
      parameters:
        - name: port-locode
          in: path
          required: true
          schema:
            type: string
        - name: equipment-number
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Accepted
          content: {}
        '401':
          description: 'Unauthorized, role or scope forbids you from taking this action'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Error accessing API
          content: {}
  '/{port-locode}/containers/{equipment-number}/import/green-light-status':
    get:
      tags:
        - release-lights
      parameters:
        - name: port-locode
          in: path
          required: true
          schema:
            type: string
        - name: equipment-number
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Accepted
          content: {}
        '401':
          description: 'Unauthorized, role or scope forbids you from taking this action'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Error accessing API
          content: {}
  '/{port-locode}/containers/{equipment-number}/import/release-rights':
    put:
      tags:
        - release-rights
      parameters:
        - name: port-locode
          in: path
          required: true
          schema:
            type: string
        - name: equipment-number
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseRightAction'
          text/json:
            schema:
              $ref: '#/components/schemas/ReleaseRightAction'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReleaseRightAction'
        required: false
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseApiResponse'
        '401':
          description: 'Unauthorized, role or scope forbids you from taking this action'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '405':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Error accessing API
          content: {}
      x-codegen-request-body-name: body
  '/{port-locode}/containers/import/release-rights':
    get:
      tags:
        - release-rights
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: status
          in: query
          schema:
            type: string
        - name: equipmentnumberfilter
          in: query
          schema:
            type: string
        - name: billofladingnumberfilter
          in: query
          schema:
            type: string
        - name: shippingagentnamefilter
          in: query
          schema:
            type: string
        - name: shippingagenttinfilter
          in: query
          schema:
            type: string
        - name: terminalnamefilter
          in: query
          schema:
            type: string
        - name: currentstakeholdernamefilter
          in: query
          schema:
            type: string
        - name: currentstakeholdertinfilter
          in: query
          schema:
            type: string
        - name: releaserightstatusfilter
          in: query
          schema:
            type: string
        - name: port-locode
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseApiResponse'
        '400':
          description: Invalid or missing request header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: 'Unauthorized, role or scope forbids you from taking this action'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Error accessing API
          content: {}
components:
  schemas:
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
          format: int32
        detail:
          type: string
        instance:
          type: string
      additionalProperties:
        type: object
        properties: {}
    GateOut:
      type: object
      properties:
        portLoCode:
          type: string
        equipmentNumber:
          type: string
        billOfLadingNumbers:
          type: array
          items:
            type: string
        timestamp:
          type: string
          format: date-time
    BaseApiResponse:
      type: object
      properties:
        publicReferenceId:
          type: string
        externalReferenceId:
          type: string
    PartyType:
      type: string
      enum:
        - Truck
        - Rail
        - Barge
    PickupParty:
      type: object
      properties:
        partyType:
          $ref: '#/components/schemas/PartyType'
        mobilePhoneNumber:
          type: string
    PickupRightActionType:
      type: string
      enum:
        - Assign
        - Update
        - Revoke
    SubmitPickupRight:
      type: object
      properties:
        terminalCode:
          type: string
        billOfLadingNumbers:
          type: array
          items:
            type: string
        pickupParty:
          $ref: '#/components/schemas/PickupParty'
        timestamp:
          type: string
          format: date-time
        actionType:
          $ref: '#/components/schemas/PickupRightActionType'
        equipmentNumber:
          type: string
        portLoCode:
          type: string
    ActionType:
      type: string
      enum:
        - Transfer
        - Accept
        - Decline
        - Revoke
        - Release
        - Update
        - Block
        - Unblock
        - Delete
    IdentificationType:
      type: string
      enum:
        - NxtEntityId
        - Tin
        - Eori
        - Duns
        - SCAC
    Identification:
      type: object
      properties:
        identificationType:
          $ref: '#/components/schemas/IdentificationType'
        identificationCode:
          type: string
    CommercialReleaseAction:
      type: object
      properties:
        releaseIdentification:
          type: string
        releaseOrderReference:
          type: string
        equipmentType:
          type: string
        billOfLadingNumbers:
          type: array
          items:
            type: string
        terminalCode:
          type: string
        actionType:
          $ref: '#/components/schemas/ActionType'
        carrier:
          $ref: '#/components/schemas/Identification'
        releaseTo:
          $ref: '#/components/schemas/Identification'
        releaseDateTimeUtc:
          type: string
          format: date-time
        expirationDateTimeUtc:
          type: string
          format: date-time
        equipmentNumber:
          type: string
        portLoCode:
          type: string
    TerminalReleaseActionType:
      type: string
      enum:
        - Release
        - Scanning
        - Block
    TerminalRelease:
      type: object
      properties:
        terminalCode:
          type: string
        actionType:
          $ref: '#/components/schemas/TerminalReleaseActionType'
        releaseDateTimeUtc:
          type: string
          format: date-time
        equipmentNumber:
          type: string
        portLoCode:
          type: string
    ReleaseRightStatus:
      type: string
      enum:
        - Unknown
        - Assigned
        - Pending
        - Accepted
        - Declined
        - Revoked
        - Archived
        - Blocked
        - Expired
        - Unblocked
    ReleaseRightAction:
      type: object
      properties:
        releaseIdentification:
          type: string
        terminalCode:
          type: string
        actionType:
          $ref: '#/components/schemas/ActionType'
        reasonForAction:
          type: string
        billOfLadingNumbers:
          type: array
          items:
            type: string
        releaseFrom:
          $ref: '#/components/schemas/Identification'
        releaseTo:
          $ref: '#/components/schemas/Identification'
        carrier:
          $ref: '#/components/schemas/Identification'
        releaseDateTimeUtc:
          type: string
          format: date-time
        expirationDateTimeUtc:
          type: string
          format: date-time
        validFrom:
          type: string
          format: date-time
        equipmentNumber:
          type: string
        portLoCode:
          type: string
    ReleaseStatusFilter:
      type: string
      enum:
        - Active
        - Pending
        - Police
        - Terminal
        - Shipping
  securitySchemes:
    Authorization:
      type: apiKey
      description: >-
        JWT authorization token using the Bearer scheme. Different for each user
        of the API. Keep in mind that you have to put the word "Bearer" and then
        a space in front of the access token. For example "Bearer
        f8e6d39a81fc4d31957086fe03630858".
      name: Authorization
      in: header
    Subscription:
      type: apiKey
      description: API subscription key. Assigned by NxtPort to your organization.
      name: Ocp-Apim-Subscription-Key
      in: header
