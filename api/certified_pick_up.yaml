openapi: 3.0.1
info:
  title:  NxtPort Certified Pick-Up API
  termsOfService: 'https://www.nxtport.eu/General-Terms-And-Conditions'
  contact:
    email: support@nxtport.eu
  version: v1
servers:
  - url: 'https://api-uat.nxtport.eu/certified-pickup/v1'
security:
- Authorization: []
- Subscription: []  
paths:
  /entities:
    get:
      tags:
        - phone-book
      parameters:
        - name: Eori
          in: query
          schema:
            type: string
            nullable: true
        - name: Duns
          in: query
          schema:
            type: string
            nullable: true
        - name: Vat
          in: query
          schema:
            type: string
            nullable: true
        - name: EntityName
          in: query
          schema:
            type: string
            nullable: true
        - name: ApcsCode
          in: query
          schema:
            type: string
            nullable: true
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneBookResponse'
        '401':
          description: 'Unauthorized, role or scope forbids you from taking this action'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '405':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Error accessing API
  '/{port-locode}/containers/{equipment-number}/import/pickup-rights':
    put:
      tags:
        - pickup-rights
      parameters:
        - name: port-locode
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: equipment-number
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitPickupRight'
          text/json:
            schema:
              $ref: '#/components/schemas/SubmitPickupRight'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SubmitPickupRight'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseApiResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: 'Unauthorized, role or scope forbids you from taking this action'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Error accessing API
  '/{port-locode}/preannouncements/codes':
    post:
      tags:
        - pre-announcement
      parameters:
        - name: port-locode
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePreAnnouncementCodes'
          text/json:
            schema:
              $ref: '#/components/schemas/CreatePreAnnouncementCodes'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreatePreAnnouncementCodes'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseApiResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: 'Unauthorized, role or scope forbids you from taking this action'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Error accessing API
  '/{port-locode}/containers/{equipment-number}/import/terminal-release':
    put:
      tags:
        - release-lights
      parameters:
        - name: port-locode
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: equipment-number
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminalRelease'
          text/json:
            schema:
              $ref: '#/components/schemas/TerminalRelease'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TerminalRelease'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseApiResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: 'Unauthorized, role or scope forbids you from taking this action'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '405':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Error accessing API
  '/{port-locode}/containers/import/terminal-release':
    put:
      tags:
        - release-lights
      parameters:
        - name: port-locode
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminalReleaseBulkAction'
          text/json:
            schema:
              $ref: '#/components/schemas/TerminalReleaseBulkAction'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TerminalReleaseBulkAction'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseApiResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: 'Unauthorized, role or scope forbids you from taking this action'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Error accessing API
  '/{port-locode}/containers/{equipment-number}/import/release-rights':
    put:
      tags:
        - release-rights
      parameters:
        - name: port-locode
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: equipment-number
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseRightAction'
          text/json:
            schema:
              $ref: '#/components/schemas/ReleaseRightAction'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReleaseRightAction'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseApiResponse'
        '401':
          description: 'Unauthorized, role or scope forbids you from taking this action'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '405':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Error accessing API
  '/{port-locode}/containers/import/release-rights':
    put:
      tags:
        - release-rights
      parameters:
        - name: port-locode
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseRightBulkAction'
          text/json:
            schema:
              $ref: '#/components/schemas/ReleaseRightBulkAction'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReleaseRightBulkAction'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseApiResponse'
        '401':
          description: 'Unauthorized, role or scope forbids you from taking this action'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '405':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Error accessing API
    get:
      tags:
        - release-rights
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: status
          in: query
          schema:
            $ref: '#/components/schemas/ReleaseStatusFilter'
        - name: equipmentnumberfilter
          in: query
          schema:
            type: string
            nullable: true
        - name: billofladingnumberfilter
          in: query
          schema:
            type: string
            nullable: true
        - name: shippingagentnamefilter
          in: query
          schema:
            type: string
            nullable: true
        - name: shippingagenttinfilter
          in: query
          schema:
            type: string
            nullable: true
        - name: terminalnamefilter
          in: query
          schema:
            type: string
            nullable: true
        - name: currentstakeholdernamefilter
          in: query
          schema:
            type: string
            nullable: true
        - name: currentstakeholdertinfilter
          in: query
          schema:
            type: string
            nullable: true
        - name: releaserightstatusfilter
          in: query
          schema:
            $ref: '#/components/schemas/ReleaseRightStatus'
        - name: actionStatusFilter
          in: query
          schema:
            $ref: '#/components/schemas/ActionStatusFilter'
        - name: port-locode
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseApiResponse'
        '400':
          description: Invalid or missing request header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: 'Unauthorized, role or scope forbids you from taking this action'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Error accessing API
  '/{port-locode}/containers/import/release-rights/{equipment-number}':
    get:
      tags:
        - release-rights
      parameters:
        - name: port-locode
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: equipment-number
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: billOfLadingNumbers
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: releaseIdentification
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseApiResponse'
        '400':
          description: Invalid or missing request header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: 'Unauthorized, role or scope forbids you from taking this action'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Error accessing API
components:
  schemas:
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties:
        type: object
        additionalProperties: false
    BaseApiResponse:
      type: object
      properties:
        publicReferenceId:
          type: string
          nullable: true
        externalReferenceId:
          type: string
          nullable: true
      additionalProperties: false
    SearchEntityFilter:
      type: object
      properties:
        eori:
          type: string
          nullable: true
        duns:
          type: string
          nullable: true
        vat:
          type: string
          nullable: true
        entityName:
          type: string
          nullable: true
        apcsCode:
          type: string
          nullable: true
        page:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
      additionalProperties: false
    EntityAddressDto:
      type: object
      properties:
        addressTypeCode:
          type: string
          nullable: true
        street:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        contactName:
          type: string
          nullable: true
        contactEmail:
          type: string
          nullable: true
      additionalProperties: false
    PhoneBookItem:
      type: object
      properties:
        apcsCode:
          type: string
          nullable: true
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/EntityAddressDto'
          nullable: true
        nxtEntityId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        vat:
          type: string
          nullable: true
        duns:
          type: string
          nullable: true
        eori:
          type: string
          nullable: true
        scac:
          type: string
          nullable: true
      additionalProperties: false
    PhoneBookResponse:
      type: object
      properties:
        searchFilter:
          $ref: '#/components/schemas/SearchEntityFilter'
        phoneBookItems:
          type: array
          items:
            $ref: '#/components/schemas/PhoneBookItem'
          nullable: true
        totalRows:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        publicReferenceId:
          type: string
          nullable: true
        externalReferenceId:
          type: string
          nullable: true
      additionalProperties: false
    PartyType:
      enum:
        - Truck
        - Rail
        - Barge
      type: string
    PickupParty:
      type: object
      properties:
        partyType:
          $ref: '#/components/schemas/PartyType'
        mobilePhoneNumber:
          type: string
          nullable: true
      additionalProperties: false
    PickupRightActionType:
      enum:
        - Assign
        - Update
        - Revoke
      type: string
    SubmitPickupRight:
      type: object
      properties:
        terminalCode:
          type: string
          nullable: true
        billOfLadingNumbers:
          type: array
          items:
            type: string
          nullable: true
        releaseIdentification:
          type: string
          nullable: true
        pickupParty:
          $ref: '#/components/schemas/PickupParty'
        timestamp:
          type: string
          format: date-time
        actionType:
          $ref: '#/components/schemas/PickupRightActionType'
        equipmentNumber:
          type: string
          nullable: true
        portLoCode:
          type: string
          nullable: true
      additionalProperties: false
    ReleaseRightIdentifier:
      type: object
      properties:
        billOfLadingNumbers:
          type: array
          items:
            type: string
          nullable: true
        equipmentNumber:
          type: string
          nullable: true
        releaseIdentification:
          type: string
          nullable: true
      additionalProperties: false
    CreatePreAnnouncementCodes:
      type: object
      properties:
        portLoCode:
          type: string
          nullable: true
        releaseRights:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseRightIdentifier'
          nullable: true
        modeOfTransport:
          type: string
          nullable: true
      additionalProperties: false
    TerminalReleaseActionType:
      enum:
        - Release
        - Scanning
        - Block
      type: string
    TerminalRelease:
      type: object
      properties:
        terminalCode:
          type: string
          nullable: true
        actionType:
          $ref: '#/components/schemas/TerminalReleaseActionType'
        releaseDateTimeUtc:
          type: string
          format: date-time
          nullable: true
        equipmentNumber:
          type: string
          nullable: true
        portLoCode:
          type: string
          nullable: true
      additionalProperties: false
    TerminalReleaseBulkAction:
      type: object
      properties:
        portLoCode:
          type: string
          nullable: true
        terminalCode:
          type: string
          nullable: true
        actionType:
          $ref: '#/components/schemas/TerminalReleaseActionType'
        releaseRights:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseRightIdentifier'
          nullable: true
      additionalProperties: false
    ActionType:
      enum:
        - Transfer
        - Accept
        - Decline
        - Revoke
        - Release
        - Update
        - Block
        - Unblock
        - Delete
      type: string
    IdentificationType:
      enum:
        - NxtEntityId
        - Tin
        - Eori
        - Duns
        - SCAC
      type: string
    QueryRoleDto:
      type: object
      properties:
        roleCode:
          type: string
          nullable: true
        assetCode:
          type: string
          nullable: true
      additionalProperties: false
    Identification:
      type: object
      properties:
        identificationType:
          $ref: '#/components/schemas/IdentificationType'
        identificationCode:
          type: string
          nullable: true
        supplyChainRole:
          $ref: '#/components/schemas/QueryRoleDto'
      additionalProperties: false
    ReleaseRightAction:
      type: object
      properties:
        releaseIdentification:
          type: string
          nullable: true
        terminalCode:
          type: string
          nullable: true
        actionType:
          $ref: '#/components/schemas/ActionType'
        reasonForAction:
          type: string
          nullable: true
        billOfLadingNumbers:
          type: array
          items:
            type: string
          nullable: true
        releaseFrom:
          $ref: '#/components/schemas/Identification'
        releaseTo:
          $ref: '#/components/schemas/Identification'
        carrier:
          $ref: '#/components/schemas/Identification'
        releaseDateTimeUtc:
          type: string
          format: date-time
        expirationDateTimeUtc:
          type: string
          format: date-time
        validFrom:
          type: string
          format: date-time
          nullable: true
        equipmentNumber:
          type: string
          nullable: true
        portLoCode:
          type: string
          nullable: true
      additionalProperties: false
    ReleaseRightBulkIdentifier:
      type: object
      properties:
        releaseFrom:
          $ref: '#/components/schemas/Identification'
        releaseTo:
          $ref: '#/components/schemas/Identification'
        terminalCode:
          type: string
          nullable: true
        billOfLadingNumbers:
          type: array
          items:
            type: string
          nullable: true
        equipmentNumber:
          type: string
          nullable: true
        releaseIdentification:
          type: string
          nullable: true
      additionalProperties: false
    ReleaseRightBulkAction:
      type: object
      properties:
        portLoCode:
          type: string
          nullable: true
        releaseRights:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseRightBulkIdentifier'
          nullable: true
        actionType:
          $ref: '#/components/schemas/ActionType'
      additionalProperties: false
    ReleaseStatusFilter:
      enum:
        - Active
        - Pending
        - Police
        - Terminal
        - Shipping
      type: string
    ReleaseRightStatus:
      enum:
        - Unknown
        - Assigned
        - Pending
        - Accepted
        - Declined
        - Revoked
        - Archived
        - Blocked
        - Expired
        - Unblocked
      type: string
    ActionStatusFilter:
      enum:
        - Undefined
        - Pending
        - Revoke
        - Transfer
      type: string
    RoleDto:
      type: object
      properties:
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    TokenExchangeState:
      type: object
      properties:
        id:
          type: string
          format: uuid
        nxtPortId:
          type: string
          nullable: true
        terminalAck:
          type: boolean
        pickupPartyAck:
          type: boolean
      additionalProperties: false
  securitySchemes:
    Authorization:
      type: apiKey
      description: 'JWT Authorization header using the Bearer scheme. Example: "Authorization:
        Bearer {token}"'
      name: Authorization
      in: header
    Subscription:
      type: apiKey
      description: API subscription key. Assigned by NxtPort to your organization.
      name: Ocp-Apim-Subscription-Key
      in: header
