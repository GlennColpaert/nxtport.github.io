openapi: 3.0.1
info:
  title: NxtPort Certified Pick-Up API
  termsOfService: https://www.nxtport.eu/General-Terms-And-Conditions
  contact:
    email: support@nxtport.eu
  version: v1
servers:
  - url: https://api-uat.nxtport.com/certified-pickup/v1
security:
  - Authorization: []
  - Subscription: []
paths:
  /notifications:
    get:
      tags:
        - notifications
      summary: Get notifications by parameters
      parameters:
        - in: query
          name: NotificationEvent
          schema:
            $ref: '#/components/schemas/NotificationEvent'
        - in: query
          name: EquipmentNumber
          schema:
            type: string
        - in: query
          name: PublicReferenceId
          schema:
            type: string
        - in: query
          name: DaysInBetween
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
             schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationDetail'
        '401':
          description: Unauthorized, role or scope forbids you from taking this action
        '405':
          description: Invalid input
        '500':
          description: Error accessing API
  /pickup-rights/barge-rail:
    put:
      tags:
        - pickup-rights
      summary: Submit a barge or rail pickup right.
      requestBody:
        description: M:NxtPort.Equipment.Import.CRP.CertifiedRelease.API.Controllers.V1.PickupRightsController.SubmitBargeRailPickupRight(NxtPort.CRP.WebContracts.Lib.Models.SubmitBargeRailPickupRight)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitBargeRailPickupRight'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseApiResponse'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized, role or scope forbids you from taking this action
        '403':
          description: Unauthorized, role or scope forbids you from taking this action
        '500':
          description: Error accessing API
  /{port-locode}/containers/{equipment-number}/import/pickup-rights:
    put:
      tags:
        - pickup-rights
      summary: Submit a pickup right.
      parameters:
        - name: port-locode
          in: path
          required: true
          schema:
            type: string
        - name: equipment-number
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: NxtPort.CRP.WebContracts.Lib.Models.SubmitPickupRight
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitPickupRight'
          text/json:
            schema:
              $ref: '#/components/schemas/SubmitPickupRight'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SubmitPickupRight'
        required: false
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseApiResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized, role or scope forbids you from taking this action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Error accessing API
  /pickup-rights/terminal/alfapassnumber/publickey:
    post:
      tags:
        - pickup-rights
      summary: As a terminal deliver a public key for alfapass numbers
      requestBody:
        description: NxtPort.Equipment.Import.CRP.EPR.Contracts.Models.Responses.PublicKeyRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicKeyRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalPublicKeyResponse'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized, role or scope forbids you from taking this action
        '403':
          description: Unauthorized, role or scope forbids you from taking this action
        '500':
          description: Error accessing API
  /{port-locode}/containers/{equipment-number}/import/terminal-release:
    put:
      tags:
        - release-lights
      summary: Submit a terminal release.
      parameters:
        - name: port-locode
          in: path
          required: true
          schema:
            type: string
        - name: equipment-number
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: NxtPort.CRP.WebContracts.Lib.Models.TerminalRelease
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminalRelease'
          text/json:
            schema:
              $ref: '#/components/schemas/TerminalRelease'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TerminalRelease'
        required: false
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseApiResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized, role or scope forbids you from taking this action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '405':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Error accessing API
  /{port-locode}/containers/import/terminal-release:
    put:
      tags:
        - release-lights
      summary: Submit a terminal release in bulk.
      parameters:
        - name: port-locode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: NxtPort.CRP.WebContracts.Lib.Models.TerminalReleaseBulkAction
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminalReleaseBulkAction'
          text/json:
            schema:
              $ref: '#/components/schemas/TerminalReleaseBulkAction'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TerminalReleaseBulkAction'
        required: false
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseApiResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized, role or scope forbids you from taking this action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Error accessing API
  /{port-locode}/containers/{equipment-number}/import/release-rights:
    put:
      tags:
        - release-rights
      summary: Submit release right actions.
      parameters:
        - name: port-locode
          in: path
          required: true
          schema:
            type: string
        - name: equipment-number
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: NxtPort.Equipment.Import.CRP.Common.Models.ReleaseRightAction
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseRightAction'
          text/json:
            schema:
              $ref: '#/components/schemas/ReleaseRightAction'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReleaseRightAction'
        required: false
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseApiResponse'
        '401':
          description: Unauthorized, role or scope forbids you from taking this action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '405':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Error accessing API
  /{port-locode}/containers/import/release-rights:
    get:
      tags:
        - release-rights
      summary: Get all commercial release rights.
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: status
          in: query
          schema:
            type: string
        - name: equipmentnumberfilter
          in: query
          schema:
            type: string
        - name: billofladingnumberfilter
          in: query
          schema:
            type: string
        - name: shippingagentnamefilter
          in: query
          schema:
            type: string
        - name: shippingagenttinfilter
          in: query
          schema:
            type: string
        - name: terminalnamefilter
          in: query
          schema:
            type: string
        - name: currentstakeholdernamefilter
          in: query
          schema:
            type: string
        - name: currentstakeholdertinfilter
          in: query
          schema:
            type: string
        - name: releaserightstatusfilter
          in: query
          schema:
            type: string
        - name: actionStatusFilter
          in: query
          schema:
            type: string
        - name: port-locode
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseApiResponse'
        '400':
          description: Invalid or missing request header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized, role or scope forbids you from taking this action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Error accessing API
    put:
      tags:
        - release-rights
      summary: Submit release right actions in Bulk.
      parameters:
        - name: port-locode
          in: path
          description: the port locode
          required: true
          schema:
            type: string
      requestBody:
        description: NxtPort.CRP.WebContracts.Lib.Models.ReleaseRightBulkAction
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseRightBulkAction'
          text/json:
            schema:
              $ref: '#/components/schemas/ReleaseRightBulkAction'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReleaseRightBulkAction'
        required: false
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseApiResponse'
        '401':
          description: Unauthorized, role or scope forbids you from taking this action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '405':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Error accessing API
  /{port-locode}/containers/import/release-rights/{equipment-number}:
    get:
      tags:
        - release-rights
      summary: Get release right detail.
      parameters:
        - name: port-locode
          in: path
          required: true
          schema:
            type: string
        - name: equipment-number
          in: path
          required: true
          schema:
            type: string
        - name: billOfLadingNumbers
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: releaseIdentification
          in: query
          schema:
            type: string
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseApiResponse'
        '400':
          description: Invalid or missing request header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized, role or scope forbids you from taking this action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Error accessing API
  /release-rights/means-of-transport:
    put:
      tags:
        - release-rights
      summary: Update means of transport
      requestBody:
        description: NxtPort.CRP.WebContracts.Lib.Models.UpdateMeansOfTransportRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMeansOfTransportRequest'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseApiResponse'
        '401':
          description: Unauthorized, role or scope forbids you from taking this action
        '405':
          description: Invalid input
        '500':
          description: Error accessing API
  /release-rights:
    get:
      tags:
        - release-rights
      summary: Get detailed information of a release right by release id
      parameters:
        - in: query
          name: releaseId
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalReleaseRightDetailResponse'
        '401':
          description: Unauthorized, role or scope forbids you from taking this action
        '405':
          description: Invalid input
        '500':
          description: Error accessing API
  /entities:
    get:
      tags:
        - phone-book
      summary: >-
        Get a list of companies by search criteria. This Api call gives
        immediately a synchronous response.
      parameters:
        - name: Eori
          in: query
          schema:
            type: string
        - name: Duns
          in: query
          schema:
            type: string
        - name: Vat
          in: query
          schema:
            type: string
        - name: EntityName
          in: query
          schema:
            type: string
        - name: ApcsCode
          in: query
          schema:
            type: string
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneBookResponse'
        '401':
          description: Unauthorized, role or scope forbids you from taking this action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '405':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Error accessing API
  /{port-locode}/validation/pickup/identification:
    post:
      tags:
        - pickup-rights
      parameters:
        - name: port-locode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: NxtPort.CRP.WebContracts.Lib.Models.PickUpPartyIdentification
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickUpPartyIdentification'
          text/json:
            schema:
              $ref: '#/components/schemas/PickUpPartyIdentification'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PickUpPartyIdentification'
        required: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: boolean
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized, role or scope forbids you from taking this action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Unauthorized, role or scope forbids you from taking this action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Error accessing API
  /{port-locode}/validation/pickup/containers:
    post:
      tags:
        - pickup-rights
      parameters:
        - name: port-locode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: NxtPort.CRP.WebContracts.Lib.Models.AlfapassPickupValidation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlfapassPickupValidation'
          text/json:
            schema:
              $ref: '#/components/schemas/AlfapassPickupValidation'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlfapassPickupValidation'
        required: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: boolean
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized, role or scope forbids you from taking this action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Unauthorized, role or scope forbids you from taking this action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Error accessing API
  /{port-locode}/sync-validation/pickup/containers:
    post:
      tags:
        - pickup-rights
      parameters:
        - name: port-locode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: NxtPort.CRP.WebContracts.Lib.Models.AlfapassOperationalPickUpValidation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlfapassOperationalPickUpValidation'
          text/json:
            schema:
              $ref: '#/components/schemas/AlfapassOperationalPickUpValidation'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlfapassOperationalPickUpValidation'
        required: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlfapassPickupValidationResult'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized, role or scope forbids you from taking this action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Unauthorized, role or scope forbids you from taking this action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Error accessing API
components:
  schemas:
    NotificationEvent:
      type: string
      enum:
        - Unknown
        - Release
        - Update
        - Delete
        - Block
        - Unblock
        - Revoke
        - TerminalRelease
        - TerminalBlocked
        - TerminalScan
        - Transferred
        - DeclinedByNextParty
        - AcceptedByNextParty
        - RevokedByPreviousParty
        - NotValidated
        - ThrownException
        - GetPagedContainers
        - PickedUpByParty
        - GetAllReleaseLights
        - GetCombinedGreenLight
        - ExpiredReleaseRights
        - InactiveReleaseRights
        - GateOut
        - DigitalKeyCreated
        - DigitalKeyRevoked
        - GetReleaseDetail
        - ReleaseLightChanged
        - ReleaseLightRegistered
        - AlfapassPickUpValidation
    EquipmentSlot:
      type: object
      properties:
        equipmentNumber:
          type: string
        slotIdentification:
          type: string
    ModeOfTransportType:
      type: string
      enum:
        - Unknown
        - Truck
        - Rail
        - Barge
    IdentificationType:
      type: string
      enum:
        - NxtEntityId
        - Tin
        - Eori
        - Duns
        - SCAC
        - Apcs
    Identification:
      type: object
      properties:
        identificationType:
          $ref: '#/components/schemas/IdentificationType'
        identificationCode:
          type: string
    TransportStageType:
      type: string
      enum:
        - Unknown
        - Import
        - Export
        - Transhipment
        - Other
    NextModeOfTransportRequest:
      type: object
      properties:
        alfaPassIdentification:
          type: string
        portLoCode:
          type: string
        terminalCode:
          type: string
        equipmentSlots:
          type: array
          items:
            $ref: '#/components/schemas/EquipmentSlot'
        modeOfTransport:
          $ref: '#/components/schemas/ModeOfTransportType'
        transportCompanyName:
          type: string
        transportCompany:
          $ref: '#/components/schemas/Identification'
        estimatedTimeOfPickup:
          type: string
          format: date-time
        transportIdentification:
          type: string
        transportName:
          type: string
        transportStage:
          $ref: '#/components/schemas/TransportStageType'
        remarks:
          type: string
        billOfLading:
          type: string
        releaseIdentification:
          type: string
    BaseApiResponse:
      type: object
      properties:
        publicReferenceId:
          type: string
        externalReferenceId:
          type: string
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
          format: int32
        detail:
          type: string
        instance:
          type: string
      additionalProperties:
        type: object
        properties: {}
    PartyType:
      type: string
      enum:
        - Truck
        - Rail
        - Barge
    PickupParty:
      type: object
      properties:
        partyType:
          $ref: '#/components/schemas/PartyType'
        identificationType:
          type: string
        identificationCode:
          type: string
    PickupRightActionType:
      type: string
      enum:
        - Assign
        - Update
        - Revoke
    SubmitPickupRight:
      type: object
      properties:
        terminalCode:
          type: string
        billOfLadingNumbers:
          type: array
          items:
            type: string
        releaseIdentification:
          type: string
        pickupParty:
          $ref: '#/components/schemas/PickupParty'
        timestamp:
          type: string
          format: date-time
        actionType:
          $ref: '#/components/schemas/PickupRightActionType'
        equipmentNumber:
          type: string
        portLoCode:
          type: string
    ReleaseRightIdentifier:
      type: object
      properties:
        billOfLadingNumbers:
          type: array
          items:
            type: string
        equipmentNumber:
          type: string
        releaseIdentification:
          type: string
    TerminalReleaseActionType:
      type: string
      enum:
        - Release
        - Scanning
        - Block
    TerminalRelease:
      type: object
      properties:
        terminalCode:
          type: string
        actionType:
          $ref: '#/components/schemas/TerminalReleaseActionType'
        releaseDateTimeUtc:
          type: string
          format: date-time
        equipmentNumber:
          type: string
        portLoCode:
          type: string
    TerminalReleaseBulkAction:
      type: object
      properties:
        portLoCode:
          type: string
        terminalCode:
          type: string
        actionType:
          $ref: '#/components/schemas/TerminalReleaseActionType'
        releaseRights:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseRightIdentifier'
    ActionType:
      type: string
      enum:
        - Transfer
        - Accept
        - Decline
        - Revoke
        - Release
        - Update
        - Block
        - Unblock
        - Delete
    ReleaseRightAction:
      type: object
      properties:
        releaseIdentification:
          type: string
        terminalCode:
          type: string
        actionType:
          $ref: '#/components/schemas/ActionType'
        reasonForAction:
          type: string
        billOfLadingNumbers:
          type: array
          items:
            type: string
        releaseFrom:
          $ref: '#/components/schemas/Identification'
        releaseTo:
          $ref: '#/components/schemas/Identification'
        carrier:
          $ref: '#/components/schemas/Identification'
        releaseDateTimeUtc:
          type: string
          format: date-time
        expirationDateTimeUtc:
          type: string
          format: date-time
        validFrom:
          type: string
          format: date-time
        equipmentNumber:
          type: string
        portLoCode:
          type: string
    ReleaseRightBulkIdentifier:
      type: object
      properties:
        releaseFrom:
          $ref: '#/components/schemas/Identification'
        releaseTo:
          $ref: '#/components/schemas/Identification'
        terminalCode:
          type: string
        billOfLadingNumbers:
          type: array
          items:
            type: string
        equipmentNumber:
          type: string
        releaseIdentification:
          type: string
    ReleaseRightBulkAction:
      type: object
      properties:
        portLoCode:
          type: string
        releaseRights:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseRightBulkIdentifier'
        actionType:
          $ref: '#/components/schemas/ActionType'
    SearchEntityFilter:
      type: object
      properties:
        eori:
          type: string
        duns:
          type: string
        vat:
          type: string
        entityName:
          type: string
        apcsCode:
          type: string
        page:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
    EntityAddressDto:
      type: object
      properties:
        addressTypeCode:
          type: string
        street:
          type: string
        postalCode:
          type: string
        city:
          type: string
        country:
          type: string
        contactName:
          type: string
        contactEmail:
          type: string
    PhoneBookItem:
      type: object
      properties:
        apcsCode:
          type: string
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/EntityAddressDto'
        nxtEntityId:
          type: string
        name:
          type: string
        vat:
          type: string
        duns:
          type: string
        eori:
          type: string
        scac:
          type: string
        apcs:
          type: string
    PhoneBookResponse:
      type: object
      properties:
        searchFilter:
          $ref: '#/components/schemas/SearchEntityFilter'
        phoneBookItems:
          type: array
          items:
            $ref: '#/components/schemas/PhoneBookItem'
        totalRows:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        publicReferenceId:
          type: string
        externalReferenceId:
          type: string
    PickUpPartyIdentification:
      type: object
      properties:
        identificationType:
          type: string
        identificationCode:
          type: string
    ReleaseRightPickupIdentifier:
      type: object
      properties:
        equipmentNumber:
          type: string
        billOfLadingNumbers:
          type: array
          items:
            type: string
    AlfapassPickupValidationResult:
      type: object
      properties:
        alfapassNumber:
          type: string
        releaseIdentification:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseRightPickupIdentifierResult'
    ReleaseRightPickupIdentifierResult:
      type: object
      properties:
        isValid:
          type: boolean
        errorMessages:
          type: string
        status:
          type: string
        greenLights:
          type: array
          items:
            $ref: '#/components/schemas/GreenLightResult'
        equipmentNumber:
          type: string
        billOfLadingNumbers:
          type: array
          items:
            type: string
    GreenLightResult:
      type: object
      properties:
        greenLightName:
          type: string
        greenLightValue:
          type: string
        greenLightColor:
          type: string
    AlfapassPickupValidation:
      type: object
      properties:
        portLoCode:
          type: string
        alfapassNumber:
          type: string
        releaseIdentification:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseRightPickupIdentifier'
    AlfapassOperationalPickUpValidation:
      type: object
      properties:
        alfapassNumber:
          type: string
        releaseIdentification:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseRightPickupIdentifier'
    NotificationDetail:
      type: object
      properties:
        nxtEntityId:
          type: string
        equipmentNumber:
          type: string
        publicReferenceId:
          type: string
        externalReferenceId:
          type: string
        storedOn:
          format: date-time
          type: string
        message:
          type: string
        type:
          type: string
        event:
          type: string
    PublicKeyRequest:
      type: object
      properties:
        publicKey:
          type: string
    TerminalPublicKeyResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            type: string
        terminalNxtEntityId:
          type: string
        publicKey:
          type: string
    SubmitBargeRailPickupRight:
      type: object
      properties:
        terminalCode:
          type: string
        releaseIdentifier:
          $ref: '#/components/schemas/ReleaseRightIdentifier'
        dataBrokerNxtEntityId:
          type: string
        actionType:
          $ref: '#/components/schemas/PickupRightActionType'
    UpdateMeansOfTransportRequest:
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/ReleaseRightIdentifier'
        meansOfTransport:
          $ref: '#/components/schemas/MeansOfTransport'
    MeansOfTransport:
      enum:
        - Truck
        - Barge
        - Rail
        - Unknown
      type: string
    LightColor:
      enum:
        - Green
        - Red
        - Orange
        - Grey
        - Yellow
      type: string
    GreenLightShortInfo:
      type: object
      properties:
        greenLightName:
          type: string
        greenLightValue:
          type: string
        color:
          $ref: '#/components/schemas/LightColor'
        label:
          type: string
        dateLastUpdated:
          format: date-time
          type: string
    IdentificationEntity:
      type: object
      properties:
        name:
          type: string
        nxtEntityId:
          type: string
        duns:
          type: string
        eori:
          type: string
        vat:
          type: string
        scac:
          type: string
        apcs:
          type: string
        externalId:
          type: string
        isAlternativeSystem:
          type: boolean
        cpuRoles:
          type: array
          items:
            type: string
    TerminalReleaseRightDetailResponse:
      type: object
      properties:
        releaseId:
          format: uuid
          type: string
        equipmentNumber:
          type: string
        releaseIdentification:
          type: string
        billOfLadingNumbers:
          type: string
        releaseOrderReference:
          type: string
        emptyReturnReference:
          type: string
        terminalName:
          type: string
        terminalCode:
          type: string
        portLoCode:
          type: string
        lights:
          type: array
          items:
            $ref: '#/components/schemas/GreenLightShortInfo'
        releaseDateTimeUtc:
          format: date-time
          type: string
        expirationDateTimeUtc:
          format: date-time
          type: string
        shippingAgentName:
          type: string
        encryptedAlfapassNumber:
          type: string
        transportOperator:
          $ref: '#/components/schemas/IdentificationEntity'
        meansOfTransport:
          $ref: '#/components/schemas/MeansOfTransport'
        publicReferenceId:
          type: string
        externalReferenceId:
          type: string
  securitySchemes:
    Authorization:
      type: apiKey
      description: >-
        JWT Authorization header using the Bearer scheme. Example:
        "Authorization: Bearer {token}"
      name: Authorization
      in: header
    Subscription:
      type: apiKey
      description: API subscription key. Assigned by NxtPort to your organization.
      name: Ocp-Apim-Subscription-Key
      in: header